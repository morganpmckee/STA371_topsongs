install.packages('boot')
library(boot)

# pop model
summary(lm(pop~year+bpm+nrgy+dnce+live+val,data=top10))
summary(lm(pop~year+bpm+dnce+live,data=top10))

set.seed(104)
validation_cases = sample(1:301, 50, replace = FALSE)
training_cases = setdiff(1:301, validation_cases)
training_set = top10[training_cases,]
validation_set = top10[validation_cases,]

pop_model = lm(pop~year+bpm+dnce+live, data=training_set)

predicted_y = predict(pop_model, validation_set) 
mean((validation_set$pop - predicted_y)^2) # 162.7004


# live model
summary(lm(live~year+bpm+nrgy+dnce+val+pop,data=top10))
summary(lm(live~year+bpm+nrgy+val+pop,data=top10))

set.seed(104)
validation_cases = sample(1:301, 50, replace = FALSE)
training_cases = setdiff(1:301, validation_cases)
training_set = top10[training_cases,]
validation_set = top10[validation_cases,]

live_model = lm(live~year+bpm+nrgy+val+pop, data=training_set)

predicted_y = predict(live_model, validation_set) 
mean((validation_set$live - predicted_y)^2) # 184.6233


# bpm model
summary(lm(bpm~live+year+nrgy+dnce+val+pop,data=top10))
summary(lm(bpm~year+nrgy+dnce+pop,data=top10))

set.seed(104)
validation_cases = sample(1:301, 50, replace = FALSE)
training_cases = setdiff(1:301, validation_cases)
training_set = top10[training_cases,]
validation_set = top10[validation_cases,]

bpm_model = lm(bpm~year+nrgy+dnce+pop, data=training_set)

predicted_y = predict(bpm_model, validation_set) 
mean((validation_set$live - predicted_y)^2) # 10566.84 ?
